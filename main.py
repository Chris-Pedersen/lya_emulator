"""Make some plots"""
import sys

from make_paper_plots import *
from coarse_grid import *
from coarse_grid_plot import *
from plot_likelihood import *
from plot_latin_hypercube import *

if __name__ == "__main__":
    sim_rootdir = sys.argv[1]
    savedir = sys.argv[2]
    plotname = sys.argv[3]
    chain_savedir = sys.argv[4]

    testdir = sim_rootdir + '/refinement_tight_validation' #'/refinement_tight_validation' #'/hires_s8_test' #'/hot_cold_test' #/share/hypatia/sbird
    emudir = sim_rootdir + '/refinement_tight' #'/hot_cold' #/refinement_big' #'/hires_s8'

    simulation_sub_directory1 = '/ns0.9As2.4e-09heat_slope0.19heat_amp1.1hub0.7/output'
    #'/ns0.96As2.6e-09heat_slope-0.19heat_amp1hub0.74/output'
    #'/ns0.97As2.2e-09heat_slope0.083heat_amp0.92hub0.69/output' #'/HeliumHeatAmp0.9/output'
    simulation_sub_directory2 = '/ns0.99As1.7e-09heat_slope0.27heat_amp1.2hub0.75/output'
    #'/test/output' #'/HeliumHeatAmp1.1/output'

    likelihood_samples_plot_savefile = savedir + '/likelihood_samples_' + plotname + '.pdf'
    flux_power_plot_savefile = savedir + '/flux_power_' + plotname + '.pdf'
    compare_plot_savefile = savedir + '/flux_power_comparison_' + plotname + '.pdf'
    emulator_error_plot_savefile = savedir + '/emulator_error_' + plotname + '.pdf'
    initial_parameter_samples_plot_savefile = savedir + '/initial_parameter_samples_' + plotname + '.pdf'

    #new_simulation_parameters = np.array([[9.83826422e-01, 1.53457828e-09, -1.12879347e-01, 1.30000000e+00, 6.61319870e-01],])
    #new_simulation_parameters = np.array([[9.86695393e-01, 1.42783510e-09, -1.03117089e-01, 1.34173988e+00, 6.5374e-01],]) #6.53651311e-01
    #new_simulation_parameters = np.array([[9.46829601e-01, 2.25988354e-09, 1.34815249e-01, 9.13357137e-01, 7.12787210e-01],])
    #new_simulation_parameters = np.array([[9.57931637e-01, 2.24577734e-09, 1.47123460e-01, 9.23891652e-01, 6.91849447e-01],])
    #new_simulation_parameters = np.array([[9.59915872e-01, 2.22953551e-09, 1.91087802e-01, 9.51346570e-01, 6.95725678e-01],])
    #new_simulation_parameters = np.array([[9.70874564e-01, 2.31612328e-09, 1.72823711e-01, 1.00025673e+00, 6.87801539e-01],])
    #new_simulation_parameters = np.array([[9.68576576e-01, 2.27767175e-09, 1.50622468e-01, 9.92427247e-01, 6.75640312e-01],])

    #new_simulation_parameters = np.array([[9.85879594e-01, 2.41643810e-09, 1.77867781e-01, 1.07567171e+00, 6.66582572e-01],])

    #new_simulation_parameters = np.array([[9.61417736e-01, 2.34767181e-09, 8.51556498e-02, 9.83325454e-01, 6.86180853e-01],])
    #new_simulation_parameters = np.array([[9.63008991e-01, 2.29516119e-09, 2.17522112e-01, 1.06218007e+00, 6.86828262e-01],])
    #new_simulation_parameters = np.array([[9.82228686e-01, 2.35673801e-09, 8.06946163e-02, 1.04017148e+00, 6.80593684e-01],])

    #new_simulation_parameters = np.array([[9.75837010e-01, 2.09004645e-09, -2.01500942e-02, 1.21652183e+00, 6.84541976e-01],])
    #new_simulation_parameters = np.array([[9.78768076e-01, 2.06522887e-09, 1.74467822e-02, 1.21296778e+00, 6.80533609e-01],])
    #new_simulation_parameters = np.array([[9.70352841e-01, 2.06333254e-09, 1.15731455e-01, 1.10472541e+00, 6.91902152e-01],])
    #new_simulation_parameters = np.array([[9.91388637e-01,  2.32639130e-09, -6.23824041e-02,  1.22852474e+00, 6.82833822e-01],])
    #new_simulation_parameters = np.array([[9.89165647e-01,  2.36748956e-09, -4.61031422e-02,  1.14056437e+00, 6.81012997e-01],])
    #new_simulation_parameters = np.array([[9.85394878e-01,  2.26946024e-09, -9.30457270e-03,  1.25382960e+00, 6.88584510e-01],])
    #new_simulation_parameters = np.array([[9.77415442e-01,  2.23414065e-09, -4.50836868e-02,  1.23333114e+00, 6.80495793e-01],])
    #new_simulation_parameters = np.array([[9.72784352e-01,  2.19136498e-09, -6.31700849e-02,  1.22164471e+00, 6.84198144e-01],])

    #new_simulation_parameters = np.array([[9.72502002e-01,  2.24918734e-09, -1.24647965e-02,  1.22835729e+00, 6.84439316e-01], [9.77409084e-01,  2.02132830e-09, -6.07260490e-02,  1.18994230e+00, 6.87879899e-01], [9.70656911e-01,  2.11649434e-09, -8.94640851e-02,  1.19460644e+00, 6.85418940e-01]])
    #new_simulation_parameters = np.array([[9.75808460e-01,  2.24941111e-09, -2.59940424e-02,  1.25307084e+00, 6.88230467e-01], [9.72743064e-01, 2.03943774e-09, 1.82766101e-03, 1.17261713e+00, 6.81818345e-01], [9.58322656e-01,  2.25789716e-09, -3.04432822e-02,  1.08329494e+00, 6.83436102e-01]])
    #new_simulation_parameters = np.array([[9.84659861e-01, 2.26507853e-09, 2.55735877e-02, 1.12649667e+00, 6.75792290e-01], [9.61838849e-01, 2.10902123e-09, 9.93368018e-03, 1.13584027e+00, 6.88362557e-01], [9.76698684e-01,  2.13067115e-09, -7.80958161e-03,  1.20525121e+00, 6.88099491e-01]])
    #new_simulation_parameters = np.array([[9.75767239e-01,  2.24163539e-09, -3.59880202e-02,  1.24633248e+00, 6.85467774e-01], [9.76205544e-01,  2.27616709e-09, -2.95273913e-02,  1.21942148e+00, 6.83875813e-01], [9.72221247e-01, 2.26958583e-09, 2.09932560e-03, 1.18679081e+00, 6.85332875e-01]])
    new_simulation_parameters = np.array([[9.50514051e-01,  2.39875829e-09, -6.73676198e-02,  1.08945060e+00, 6.72269278e-01], [9.85888558e-01,  2.25669507e-09, -1.08792958e-01,  1.35522659e+00, 6.94326803e-01], [9.71092923e-01, 2.15252501e-09, 5.88081340e-02, 1.24899055e+00, 6.74588265e-01]])
    print(new_simulation_parameters.shape)
    emulator_parameter_limits = np.array([[0.9, 0.99], [1.5e-09, 2.8e-09], [-0.4, 0.4], [0.6, 1.4], [0.65, 0.75]]) #Big emulator
    #emulator_parameter_limits = np.array([[0.8, 1.05], [1.2e-09, 3e-09], [-0.5, 0.5], [0.5, 1.5], [0.6, 0.8]]) #Small emulator

    #prior_points = np.array([[0.9321428571428572, 2.026190476190476e-09, 0.0761904761904762, 1.1904761904761902, 0.7380952380952381], [0.9364285714285714, 1.7785714285714284e-09, -0.11428571428571432, 0.7333333333333333, 0.684], [0.945, 1.592857142857143e-09, 0.3047619047619048, 0.8857142857142857, 0.6515], [0.9878571428571429, 1.7166666666666667e-09, 0.2666666666666666, 1.2285714285714286, 0.74755], [0.9278571428571428, 2.5833333333333333e-09, 0.22857142857142854, 1.038095238095238, 0.7142857142857143], [0.9107142857142857, 2.521428571428571e-09, 0.11428571428571421, 0.6571428571428571, 0.68565], [0.9792857142857143, 2.3357142857142857e-09, 0.1523809523809524, 0.8476190476190476, 0.7285714285714285], [0.9578571428571429, 2.2738095238095236e-09, -0.038095238095238126, 1.2666666666666666, 0.7], [0.9407142857142857, 1.5309523809523808e-09, -0.2285714285714286, 0.8095238095238094, 0.6714285714285715], [0.9835714285714285, 1.8404761904761903e-09, -0.0761904761904762, 1.0761904761904761, 0.6571428571428571], [0.9707142857142858, 2.7690476190476188e-09, 0.03809523809523807, 1.1523809523809523, 0.719047619047619], [0.9535714285714286, 2.645238095238095e-09, -0.3047619047619048, 0.7714285714285714, 0.7047619047619048], [0.9664285714285714, 2.088095238095238e-09, -0.1523809523809524, 0.9999999999999999, 0.6904761904761905], [0.9235714285714286, 2.7071428571428567e-09, -0.380952380952381, 0.9619047619047618, 0.6761904761904762], [0.9021428571428571, 2.3976190476190474e-09, 0.19047619047619047, 1.1142857142857143, 0.6952380952380952], [0.9492857142857143, 1.9642857142857143e-09, -5.551115123125783e-17, 0.9238095238095237, 0.714], [0.9192857142857143, 1.6547619047619046e-09, -0.19047619047619052, 1.3428571428571427, 0.7238095238095238], [0.9064285714285715, 2.2119047619047615e-09, -0.2666666666666667, 0.6952380952380952, 0.7434], [0.9621428571428572, 2.15e-09, 0.34285714285714286, 1.380952380952381, 0.6619047619047619], [0.915, 1.9023809523809522e-09, 0.38095238095238093, 1.3047619047619046, 0.73325], [0.975, 2.459523809523809e-09, -0.34285714285714286, 0.6190476190476191, 0.6666666666666667]])

    prior_points = np.array([[0.9321428571428572, 2.026190476190476e-09, 0.0761904761904762, 1.1904761904761902, 0.7380952380952381], [0.9364285714285714, 1.7785714285714284e-09, -0.11428571428571432, 0.7333333333333333, 0.680952380952381], [0.945, 1.592857142857143e-09, 0.3047619047619048, 0.8857142857142857, 0.6523809523809524], [0.9878571428571429, 1.7166666666666667e-09, 0.2666666666666666, 1.2285714285714286, 0.7476190476190476], [0.9278571428571428, 2.5833333333333333e-09, 0.22857142857142854, 1.038095238095238, 0.7142857142857143], [0.9107142857142857, 2.521428571428571e-09, 0.11428571428571421, 0.6571428571428571, 0.6857142857142857], [0.9792857142857143, 2.3357142857142857e-09, 0.1523809523809524, 0.8476190476190476, 0.7285714285714285], [0.9578571428571429, 2.2738095238095236e-09, -0.038095238095238126, 1.2666666666666666, 0.7], [0.9407142857142857, 1.5309523809523808e-09, -0.2285714285714286, 0.8095238095238094, 0.6714285714285715], [0.9835714285714285, 1.8404761904761903e-09, -0.0761904761904762, 1.0761904761904761, 0.6571428571428571], [0.9707142857142858, 2.7690476190476188e-09, 0.03809523809523807, 1.1523809523809523, 0.719047619047619], [0.9535714285714286, 2.645238095238095e-09, -0.3047619047619048, 0.7714285714285714, 0.7047619047619048], [0.9664285714285714, 2.088095238095238e-09, -0.1523809523809524, 0.9999999999999999, 0.6904761904761905], [0.9235714285714286, 2.7071428571428567e-09, -0.380952380952381, 0.9619047619047618, 0.6761904761904762], [0.9021428571428571, 2.3976190476190474e-09, 0.19047619047619047, 1.1142857142857143, 0.6952380952380952], [0.9492857142857143, 1.9642857142857143e-09, -5.551115123125783e-17, 0.9238095238095237, 0.7095238095238096], [0.9192857142857143, 1.6547619047619046e-09, -0.19047619047619052, 1.3428571428571427, 0.7238095238095238], [0.9064285714285715, 2.2119047619047615e-09, -0.2666666666666667, 0.6952380952380952, 0.7428571428571429], [0.9621428571428572, 2.15e-09, 0.34285714285714286, 1.380952380952381, 0.6619047619047619], [0.915, 1.9023809523809522e-09, 0.38095238095238093, 1.3047619047619046, 0.7333333333333333], [0.975, 2.459523809523809e-09, -0.34285714285714286, 0.6190476190476191, 0.6666666666666667]])

    #test_knot_plots(testdir=testdir, emudir=emudir, plotdir=savedir, plotname=plotname, mf=2, kf_bin_nums=None, data_err=False, max_z=4.2)
    #plot_test_interpolate_kf_bin_loop(emudir, testdir, savedir=savedir, plotname="_Two_loop", kf_bin_nums=np.arange(2))

    #make_plot(chain_savedir + '/AA0.97BB1.3_chain_20000_MeanFluxFactor.txt', likelihood_samples_plot_savefile)
    #output = make_plot_flux_power_spectra(testdir, emudir, flux_power_plot_savefile, mean_flux_label='s', rescale_data_error=True, fix_error_ratio=False, error_ratio=100.)
    #make_plot_compare_two_simulations(emudir, emudir, simulation_sub_directory1, simulation_sub_directory2, compare_plot_savefile)
    #make_plot_emulator_error(emudir, emulator_error_plot_savefile, mean_flux_label='s') #, max_z=2.6)
    #output = make_plot_initial_parameter_samples(initial_parameter_samples_plot_savefile)
    #generate_emulator_submissions(emudir, new_simulation_parameters, emulator_parameter_limits, hypatia_queue='cores24', refinement=True, json_file_name='/emulator_params_batch4_2.json')
    output = run_and_plot_likelihood_samples(testdir, emudir, likelihood_samples_plot_savefile, plotname, plot_posterior=True,
                                             chain_savedir=chain_savedir, n_burn_in_steps=500, n_steps=1500,
                                             while_loop=False, mean_flux_label='s', return_class_only=False,
                                             rescale_data_error=True, fix_error_ratio=False, error_ratio=100.,
                                             include_emulator_error=True, emulator_json_file='emulator_params_latin.json')  # , max_z=2.6
    #output = run_simulations(testdir, emudir, new_simulation_parameters, simulation_sub_directory=simulation_sub_directory1, optimise_GP=False)
    #make_emulator_latin_hypercube(emudir, 30, emulator_parameter_limits, hypatia_queue='cores24', prior_points=prior_points, refinement=True, json_file_name='/emulator_params_latin.json')
